---
- hosts: "masters, workers"
  remote_user: ubuntu
  become: yes
  become_method: sudo
  become_user: root
  gather_facts: yes
  connection: ssh

  tasks:
     - name: Create containerd config file
       file:
         path: "/etc/modules-load.d/containerd.conf"
         state: "touch"

     - name: Add conf for containerd
       blockinfile:
         path: "/etc/modules-load.d/containerd.conf"
         block: |
               overlay
               br_netfilter

     - name: modprobe
       shell: |
               modprobe overlay
               modprobe br_netfilter

     - name: Set system configurations for Kubernetes networking
       file:
         path: "/etc/sysctl.d/99-kubernetes-cri.conf"
         state: "touch"

     - name: Add conf for containerd
       blockinfile:
         path: "/etc/sysctl.d/99-kubernetes-cri.conf"
         block: |
                net.bridge.bridge-nf-call-iptables = 1
                net.ipv4.ip_forward = 1
                net.bridge.bridge-nf-call-ip6tables = 1

     - name: Apply new settings
       shell: |
              sysctl --system

#######################################################
#  Enable Proxy if you need  
#     - name: Proxy Setting for Apt
#       file:
#         path: "/etc/apt/apt.conf.d/proxy.conf"
#         state: "touch"

#     - name: Add Proxy Source
#       blockinfile:
#         path: "/etc/apt/apt.conf.d/proxy.conf"
#         block: |
#                 Acquire::http::Proxy "http://inban1b-proxy.apac.nsn-net.net:8080/";
#                 Acquire::https::Proxy "http://inban1b-proxy.apac.nsn-net.net:8080/";


#### Disabling in my case only, as these steps are already done in Ubuntu Qcow2 images

#     - name: Kill any running apt process
#       shell: |
#              killall apt apt-get
#       ignore_errors: yes
#
#     - name: install containerd
#       shell: |
#               apt-get update && apt-get install -y containerd
#               mkdir -p /etc/containerd
#               containerd config default | tee /etc/containerd/config.toml
#               systemctl restart containerd
##
#     - name: disable swap
#       shell: |
#               swapoff -a
#               sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
#
#     - name: install and configure dependencies
#       shell: |
#               apt-get update && apt-get install -y apt-transport-https curl
#               curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
#
#     - name: Create kubernetes repo file
#       file:
#         path: "/etc/apt/sources.list.d/kubernetes.list"
#         state: "touch"
#
#     - name: Add K8s Source
#       blockinfile:
#         path: "/etc/apt/sources.list.d/kubernetes.list"
#         block: |
#               deb https://apt.kubernetes.io/ kubernetes-xenial main
#
#     - name: install kubernetes
#       shell: |
#               apt-get update
#               apt-get install -y kubelet=1.20.1-00 kubeadm=1.20.1-00 kubectl=1.20.1-00
#               apt-mark hold kubelet kubeadm kubectl

#######################################################
#     - name: enable proxy for master
#       file:
#         path: "/etc/systemd/system/containerd.service.d"
#         state: directory
#         recurse: yes
#
#     - name: create proxy file
#       file:
#         path: "/etc/systemd/system/containerd.service.d/http_proxy.conf"
#         state: "touch"
#
#     - name: Add conf for containerd
#       blockinfile:
#         path: "/etc/systemd/system/containerd.service.d/http_proxy.conf"
#         block: |
#                [Service]
#                Environment="HTTP_PROXY=http://inban1b-proxy.apac.nsn-net.net:8080"
#                Environment="HTTPS_PROXY=http://inban1b-proxy.apac.nsn-net.net:8080"
#                Environment="NO_PROXY=localhost,127.0.0.1,172.21.166.192/26,10.0.0.0/8"
#
#     - name: Add conf for containerd
#       blockinfile:
#         path: "/etc/environment"
#         block: |
#                no_proxy="localhost,127.0.0.1,172.21.166.192/26,10.0.0.0/8"
#                http_proxy="http://inban1b-proxy.apac.nsn-net.net:8080/"
#                https_proxy="http://inban1b-proxy.apac.nsn-net.net:8080/"
#
#     - name: reload containerd process
#       shell: |
#               systemctl daemon-reload
#               systemctl restart containerd

